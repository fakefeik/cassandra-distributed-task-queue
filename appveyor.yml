version: "{build}"

skip_commits:
  files:
    - "**/*.md"

image:
  - Visual Studio 2022
  - Ubuntu2004

init:
  - git config --global core.autocrlf false

skip_tags: true
skip_non_tags: true

nuget:
  disable_publish_on_pr: true

stack: node 14, docker

environment:
  NPM_TOKEN:
    secure: Gx5yyFrlELZY4DNW/uAuiXdhUADacNqi3LptQwldv8O61KpYyiDUniA8lBJ5jfne

matrix:
  fast_finish: true
  allow_failures:
    - image: Ubuntu2004

for:
  - matrix:
      only:
        - image: Ubuntu2004
    before_test:
      - docker info
      - docker-compose -f docker-compose.linux.yaml up -d --build

  - matrix:
      only:
        - image: Visual Studio 2022
    install:
      - ps: Switch-DockerWindows
      - docker info
    before_test:
      - docker-compose -f docker-compose.yaml up -d --build

before_build:
  - ps: |
      $ErrorActionPreference = "Stop"
      $tagName = $env:APPVEYOR_REPO_TAG_NAME
      if ($isWindows -and ($tagName -match '^v\d+\.\d+')) # tag name starts with 'vX.Y'
      {
        $version = $tagName.Substring(1)
        $env:SHOULD_PUBLISH_NUGET_PACKAGE = "true"
        Write-Host "Will publish nuget package for $tagName tag" -ForegroundColor "Green"
        if ($tagName -match '^v\d+\.\d+-release') # tag name starts with 'vX.Y-release' (e.g. use 'v4.2-release.1' tag for the first patch for release v4.2)
        {
          $version = $version.Substring(0, $version.IndexOf("-release"))
          $env:SHOULD_CREATE_RELEASE = "true"
          Write-Host "Will create release for $tagName tag" -ForegroundColor "Green"
        }
        $matchVersion = Select-String -Path ./version.json -Pattern "`"version`": `"$version`""
        if ($matchVersion -eq $null)
        {
          Write-Error "Version in tag ($version) does not match version in version.json"
        }
      }
  - dotnet --info
  - node --version
  - dotnet restore ./Cassandra.DistributedTaskQueue.sln --verbosity minimal
  - dotnet tool restore
  - yarn --cwd cassandra-distributed-task-queue-ui install --frozen-lockfile

build_script:
  - dotnet build --configuration Release ./Cassandra.DistributedTaskQueue.sln
  - dotnet pack --no-build --configuration Release ./Cassandra.DistributedTaskQueue.sln
  - yarn --cwd cassandra-distributed-task-queue-ui build

test_script:
  - dotnet jb cleanupcode Cassandra.DistributedTaskQueue.sln --profile=CatalogueCleanup --verbosity=WARN
  - git diff --exit-code
  - dotnet test --no-build --configuration Release ./Cassandra.DistributedTaskQueue.Tests/Cassandra.DistributedTaskQueue.Tests.csproj
  - yarn --cwd cassandra-distributed-task-queue-ui lint

after_test:
  - ps: |
      if ($env:SHOULD_PUBLISH_NUGET_PACKAGE -eq "true")
      {
        npm config set '//registry.npmjs.org/:_authToken' $env:NPM_TOKEN
        $fileNames = Get-ChildItem -Path "cassandra-distributed-task-queue-ui/dist" -Recurse -Include *.tgz
        foreach ($file in $fileNames)
        {
          Write-Host "Will publish npm package $($file.Name)" -ForegroundColor "Green"
          npm publish $file.FullName --quiet
        }
      }

artifacts:
  - path: "./Cassandra.DistributedTaskQueue*/bin/Release/*.nupkg"
  - path: "./cassandra-distributed-task-queue-ui/dist/*.tgz"

deploy:
  - provider: NuGet
    server: https://nuget.org
    api_key:
      secure: yF8QZP8JVTST3Ys82b3YXn0zmtEqEU0236nJlN590TdToEiKmZS0BxmM4U2ae7vi
    skip_symbols: true
    on:
      SHOULD_PUBLISH_NUGET_PACKAGE: true

  - provider: GitHub
    tag: $(APPVEYOR_REPO_TAG_NAME)
    auth_token:
      secure: y8dDOcAtq4U1MTDJFX8f23xsvyFU1u4bhwr9Lzbkf2revNWPPTifBkWghris9v8i
    draft: false
    prerelease: false
    on:
      SHOULD_CREATE_RELEASE: true
